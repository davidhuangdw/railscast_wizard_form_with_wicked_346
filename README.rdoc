
        # validation for pratial record: add 'status' column to indicate
        rails g add_status_to_users status
        class UserStepsController
          def update
              ...
              @user[:status] = step.to_s
              ...
        end
        class User
          validates :twitter_username, format:{without:/\W/}, allow_blank:true, if: :social?

          def personal?
            status.try(:include?, 'personal')
          end
          def social?
            status.try(:include?, 'social')
          end
        end

        # validation: by 'if'
        class User
          validates :password, :email, :name, presence: true, if: :new_record?
          validates :email, uniqueness: true, if: :new_record?
        end

        # views/user_steps/personal.html.haml
        = render layout:'form' do |f|
          = f.input :date_of_birth
          = f.input :bio


        # views/user_steps/_form.html.haml
        = simple_form_for @user, url:wizard_path do |f|
          = f.error_notification
          .form-inputs
            = yield f

          .form-actions
            = f.button :submit, 'Continue'
            = link_to 'Back', previous_wizard_path, class:'btn btn-primary'
            = link_to 'Skip', next_wizard_path, class:'btn btn-primary'


        #controller
        class UserStepsController
          include Wicked::Wizard
          steps :personal, :social

          def show
            @user = current_user
            render_wizard                       # render current_step
          end

          def update
            @user = current_user
            @user.attributes = user_params
            render_wizard @user                 # it will save @user, and render next_step if success
          end
        end

        # routes helper
        wizard_path                  # Grabs the current path in the wizard
        wizard_path(:specific_step)  # Url of the :specific_step
        next_wizard_path             # Url of the next step
        previous_wizard_path         # Url of the previous step

        # controller helper
        steps  :first, :second       # Sets the order of steps
        step                         # Gets current step
        next_step                    # Gets next step
        previous_step                # Gets previous step
        skip_step                    # Tells render_wizard to skip to the next logical step
        jump_to(:specific_step)      # Jump to :specific_step
        render_wizard                # Renders the current step
        render_wizard(@user)         # Shows next_step if @user.save, otherwise renders

        # install
        rails g controller user_steps
        resources :user_steps
        = link_to 'steps', user_steps_url

        gem 'wicked'

        # idea
        # refactor multi-step form into separate RESTful controller
        # create/update attributes immediately after every step
        # so we can keep stateless: use 'get' to show every step's form, without using hidden params
        # add column 'status' to indicate partial state
